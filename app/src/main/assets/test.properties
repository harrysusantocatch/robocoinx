public static void main(String[] args) throws IOException, URISyntaxException {
//        getView();
File file = new File("src/com/test/home.html");
Document doc = Jsoup.parse(file, "UTF-8");
String csrfToken = "PTKVe6AP5hmX"; // get from cookies
String op = "free_play";
String fingerprint = "";
String clientSeed = "";
String fingerprint2 = "";
String pwc = "";
String tokenName = "";
String tokenValue = "";
String lastParam = "";
String lastParamValue = "";


Elements scripts = doc.getElementsByTag("script");
for (Element script: scripts) {
List<DataNode> dataNodes = script.dataNodes();
for (DataNode dataNode : dataNodes){
String data = dataNode.getWholeData();
if(data.contains("token_name")){
// token name
String[] dataSplit = data.split(";");
String varTokenName = dataSplit[1];
String[] tokenNameSplit = varTokenName.split(" ");
tokenName = tokenNameSplit[3].replace("'", "");

// last param
String varLastParam = dataSplit[2];
String[] lastParamSPlit = varLastParam.split(" ");
lastParam = lastParamSPlit[3].replace("'", "");

}
if(data.contains("#"+tokenName)){
// token value
String regex = "\\(\"#"+tokenName+"\"\\).val\\(\"\\d*:[A-Za-z0-9]*";
Pattern pattern = Pattern.compile(regex);
Matcher matcher = pattern.matcher(data);
if(matcher.find()){
tokenValue = matcher.group();
String strReplace = "(\"#"+tokenName+"\").val(\"";
tokenValue = tokenValue.replace(strReplace, "");
}
}
}
}
clientSeed = getCLientSeed();
//        Connection.Response lastParamValueResponse = getLastParamValueResponse(lastParam, csrfToken);
//        lastParamValue = getSha256Hex(lastParamValueResponse.body());
System.out.println("op : "+op);
System.out.println("fingerprint : "+fingerprint+"=e42ec4eecaaeb910ba4a91f14f029902");
System.out.println("clientSeed : "+clientSeed);
System.out.println("fingerprint2 : "+fingerprint2+"=1149863222");
System.out.println("pwc : "+pwc);
System.out.println(tokenName.equalsIgnoreCase("c12433d9d9cb"));
System.out.println(tokenValue.equalsIgnoreCase("1569478460:1366dd09aa7e18080ce65906d31084893601b557caf71509226298a2fd6069b6"));
System.out.println(lastParam.equalsIgnoreCase("1f3d673e4623"));
System.out.println(lastParamValue.equalsIgnoreCase("4b0567448554e98d34130c9f13e590a532af45ca36ec00d6778caa5febe67f02")+" = "+lastParamValue);

}

private static String getCLientSeed(){
String charSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
String randomString = "";
for (int i = 0; i < 16; i++) {
int randomPoz = (int) Math.floor(Math.random() * charSet.length());
randomString += charSet.substring(randomPoz, randomPoz + 1);
}
return randomString;
}
// https://freebitco.in/cgi-bin/fp_check.pl?s=1f3d673e4623&csrf_token=PTKVe6AP5hmX
private static Connection.Response getLastParamValueResponse(String lastParam, String csrfToken) throws IOException {
String url = "https://freebitco.in/cgi-bin/fp_check.pl?s="+lastParam+"&csrf_token="+csrfToken;
Connection.Response response = Jsoup.connect(url)
.userAgent(StaticValues.USER_AGENT)
.header("Access-Control-Allow-Credentials", "true")
.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept")
.timeout(StaticValues.TIMEOUT)
.method(Connection.Method.GET)
.execute();
return  response;
}

private static String getSha256Hex(String text){
String shaHex = "";
try {
MessageDigest md = MessageDigest.getInstance("SHA-256");

md.update(text.getBytes("UTF-8"));
byte[] digest = md.digest();

shaHex = DatatypeConverter.printHexBinary(digest);
} catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
ex.printStackTrace();
}
return shaHex.toLowerCase();
}

https://stackoverflow.com/questions/29127429/get-the-value-of-a-javascript-variable-with-java

InputStream inputStream = getAssets().open("home.html");
Document document = Jsoup.parse(inputStream, "UTF-8", "");
ProfileView x = new ProfileView(document);
System.out.println(x);

TODO
disable LTr
reedem bonus & RP